
mysql> use hasan;

Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed

mysql> desc signUpDetails;

+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   | UNI | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(20) | NO   |     | NULL    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+

8 rows in set (0.00 sec)

mysql> alter table signUpDetails modify column Mail varchar(20) Not Null;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   | UNI | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(20) | NO   |     | NULL    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.00 sec)

mysql> alter table signUpDetails drop index Password;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   |     | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(20) | NO   |     | NULL    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.00 sec)

mysql> alter table signUpDetails modify column Password varchar(20) Unique Not
 Null;
Query OK, 0 rows affected (0.06 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   | UNI | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(20) | NO   |     | NULL    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.00 sec)


mysql> alter table signUpDetails modify column Mail varchar(20) Not Null;
Query OK, 0 rows affected (0.22 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   | UNI | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(20) | NO   |     | NULL    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.01 sec)

===========================================================================================================

### Deleting Constraint(Primary key)

mysql> alter table signUpDetails drop index Password;

(OR)

mysql> alter table signUpDetails drop primary key(col_name);

Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   |     | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(20) | NO   |     | NULL    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.00 sec)

mysql> show tables;
+-----------------+
| Tables_in_hasan |
+-----------------+
| signUpDetails   |
+-----------------+
1 row in set (0.01 sec)
===========================================================================================================

### Deleting Constraint (2nd way)

mysql> alter table signUpDetails drop constraint Role;
Query OK, 0 rows affected (0.05 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   |     | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(6)  | YES  |     | user    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.00 sec)
===========================================================================================================

### Creating new Table

mysql> create table Logged_In_User (Id int, Mail_Id varchar(30) not null,Role
varchar(6) NOT NULL,foreign key(Id) references signUpDetails(Id));
Query OK, 0 rows affected (0.05 sec)

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   |     | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(20) | NO   |     | NULL    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.01 sec)

mysql> show tables;
+-----------------+
| Tables_in_hasan |
+-----------------+
| Logged_In_User  |
| signUpDetails   |
+-----------------+
2 rows in set (0.00 sec)

mysql> desc Logged_In_User;
+---------+-------------+------+-----+---------+-------+
| Field   | Type        | Null | Key | Default | Extra |
+---------+-------------+------+-----+---------+-------+
| Id      | int         | YES  | MUL | NULL    |       |
| Mail_Id | varchar(30) | NO   |     | NULL    |       |
| Role    | varchar(6)  | NO   |     | NULL    |       |
+---------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> select * from signUpDetails;
+------------+-----------+-----------------+------------+----------+---------------+-------+----+
| First_Name | Last_Name | Mail            | DOB        | Password | Mobile_Number | Role  | Id |
+------------+-----------+-----------------+------------+----------+---------------+-------+----+
| Mohammed   | Hasan     | hasan@gmail.com | 2003-09-19 | Hasan    |    9876543210 | admin |  1 |
+------------+-----------+-----------------+------------+----------+---------------+-------+----+
1 row in set (0.00 sec)
===========================================================================================================

### Left Join

mysql> select * from signUpDetails left join Logged_In_User on signUpDetails.Id=Logged_In_User.Id;
+------------+-----------+-----------------+------------+----------+---------------+-------+----+------+---------+------+
| First_Name | Last_Name | Mail            | DOB        | Password | Mobile_Number | Role  | Id | Id   | Mail_Id | Role |
+------------+-----------+-----------------+------------+----------+---------------+-------+----+------+---------+------+
| Mohammed   | Hasan     | hasan@gmail.com | 2003-09-19 | Hasan    |    9876543210 | admin |  1 | NULL | NULL    | NULL |
+------------+-----------+-----------------+------------+----------+---------------+-------+----+------+---------+------+
1 row in set (0.00 sec)

mysql> select * from Logged_In_User;
Empty set (0.00 sec)

===========================================================================================================

### Altering

mysql> alter table Logged_In_User modify column Id int not null;
Query OK, 0 rows affected (0.09 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc Logged_In_User;
+---------+-------------+------+-----+---------+-------+
| Field   | Type        | Null | Key | Default | Extra |
+---------+-------------+------+-----+---------+-------+
| Id      | int         | NO   | MUL | NULL    |       |
| Mail_Id | varchar(30) | NO   |     | NULL    |       |
| Role    | varchar(6)  | NO   |     | NULL    |       |
+---------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

===========================================================================================================

### Inserting new row

mysql> insert into Logged_In_User values(1,"hasan@gmail.com","admin");
Query OK, 1 row affected (0.01 sec)

mysql> select * from Logged_In_User;
+----+-----------------+-------+
| Id | Mail_Id         | Role  |
+----+-----------------+-------+
|  1 | hasan@gmail.com | admin |
+----+-----------------+-------+
1 row in set (0.00 sec)

===========================================================================================================
### Left Join

mysql> select * from signUpDetails left join Logged_In_User on signUpDetails.Id=Logged_In_User.Id;
+------------+-----------+-----------------+------------+----------+---------------+-------+----+------+-----------------+-------+
| First_Name | Last_Name | Mail            | DOB        | Password | Mobile_Number | Role  | Id | Id   | Mail_Id         | Role  |
+------------+-----------+-----------------+------------+----------+---------------+-------+----+------+-----------------+-------+
| Mohammed   | Hasan     | hasan@gmail.com | 2003-09-19 | Hasan    |    9876543210 | admin |  1 |    1 | hasan@gmail.com | admin |
+------------+-----------+-----------------+------------+----------+---------------+-------+----+------+-----------------+-------+
1 row in set (0.00 sec)
<<<<<<< HEAD

===========================================================================================================
### Setting Default 

mysql> alter table signUpDetails modify column Role varchar(6) default "user";
Query OK, 1 row affected (0.17 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql> desc signUpDetails;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| First_Name    | varchar(25) | NO   |     | NULL    |                |
| Last_Name     | varchar(20) | NO   |     | NULL    |                |
| Mail          | varchar(20) | NO   | UNI | NULL    |                |
| DOB           | date        | NO   |     | NULL    |                |
| Password      | varchar(20) | NO   |     | NULL    |                |
| Mobile_Number | bigint      | NO   | UNI | NULL    |                |
| Role          | varchar(6)  | YES  |     | user    |                |
| Id            | int         | NO   | PRI | NULL    | auto_increment |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.00 sec)
==========================================================================================================
mysql

mysql> desc demo;
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| st_Id     | int         | NO   |     | NULL    |       |
| name      | varchar(25) | NO   | PRI | NULL    |       |
| course_Id | int         | YES  |     | NULL    |       |
| duration  | int         | YES  |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> alter table demo drop constraint name;
Query OK, 2 rows affected (0.09 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> desc demo;
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| st_Id     | int         | NO   |     | NULL    |       |
| name      | varchar(25) | NO   |     | NULL    |       |
| course_Id | int         | YES  |     | NULL    |       |
| duration  | int         | YES  |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)
=========================================================================================================

## To delete Foreign key from table

ALTER TABLE artists DROP FOREIGN KEY artistS_ibfk_1;

=========================================================================================================

## Difference between Delete and Truncate

      Although TRUNCATE TABLE is similar to DELETE , it is classified as a DDL statement rather than a DML statement.
It differs from DELETE in the following ways: Truncate operations drop and re-create the table, which is
much faster than deleting rows one by one, particularly for large tables.

      The DELETE statement removes rows one at a time and records an entry in the transaction log for each deleted row.
 TRUNCATE TABLE removes the data by deallocating the data pages used to store the table data and records only 
 the page deallocations in the transaction log.
      
      Delete deletes only in db but Truncate deletes the data  completely also the data as in "Recycle bin"

## Use of Start Transaction

      * If you were to add BEGIN TRANSACTION (or BEGIN TRAN) before the statement it automatically makes the transaction
 explicit and holds a lock on the table until the transaction is either committed or rolled back
      * 
A transaction in MySQL starts with the first executable SQL statement and ends when it finds a commit or rolled back
 either explicitly or implicitly. It explicitly uses COMMIT or ROLLBACK statement and implicitly when a DDL statement is used.

===========================================================================================================

## To create new table with Same schema of other table

mysql> show tables;
+-----------------+
| Tables_in_hasan |
+-----------------+
| All_Courses     |
| Comment         |
| Logged_In       |
| Logged_In_User  |
| Student_Details |
| demo            |
| demo2           |
| signUpDetails   |
+-----------------+
8 rows in set (0.00 sec)

mysql> create table (if not exists)<Optional> Logged like Logged_In_User;
Query OK, 0 rows affected (0.06 sec)

mysql> show tables;
+-----------------+
| Tables_in_hasan |
+-----------------+
| All_Courses     |
| Comment         |
| Logged          |
| Logged_In       |
| Logged_In_User  |
| Student_Details |
| demo            |
| demo2           |
| signUpDetails   |
+-----------------+
9 rows in set (0.00 sec)

mysql> desc Logged;
+---------+-------------+------+-----+---------+-------+
| Field   | Type        | Null | Key | Default | Extra |
+---------+-------------+------+-----+---------+-------+
| Id      | int         | NO   | MUL | NULL    |       |
| Mail_Id | varchar(30) | NO   |     | NULL    |       |
| Role    | varchar(6)  | NO   |     | NULL    |       |
+---------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> select * from Logged;
Empty set (0.00 sec)

mysql> insert Logged select * from Logged_In_User;
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> select * from Logged;
+----+-----------------+-------+
| Id | Mail_Id         | Role  |
+----+-----------------+-------+
|  1 | hasan@gmail.com | admin |
|  1 | hasan@gmail.com | admin |
+----+-----------------+-------+
2 rows in set (0.00 sec)

## Copy data from a table of one db to a table of another db

INSERT INTO database2.table2 SELECT * from database1.table1

=========================================================================================================

## Save point Concept

mysql> set autocommit = 0;
Query OK, 0 rows affected (0.00 sec)

mysql> delete * from Logged where Id=1;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '* from Logged where Id=1' at line 1
mysql> delete from Logged where Id=1;
Query OK, 2 rows affected (0.00 sec)

mysql> select * from Logged;
Empty set (0.00 sec)

mysql> savepoint A;
Query OK, 0 rows affected (0.00 sec)

mysql> insert into Logged values(2,"hwbdn");
ERROR 1136 (21S01): Column count doesn't match value count at row 1

mysql> insert into Logged values(2,"hwbdn",);
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1

mysql> insert into Logged values(2,"hwbdn",user);
ERROR 1054 (42S22): Unknown column 'user' in 'field list'

mysql> insert into Logged values(2,"hwbdn","user");
Query OK, 1 row affected (0.00 sec)

mysql> savepoint B;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from Logged;
+----+---------+------+
| Id | Mail_Id | Role |
+----+---------+------+
|  2 | hwbdn   | user |
+----+---------+------+
1 row in set (0.00 sec)

mysql> rollback A;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'A' at line 1

mysql> rollback to A;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from Logged;
Empty set (0.00 sec)

mysql> rollback to B;
ERROR 1305 (42000): SAVEPOINT B does not exist

mysql> rollback to A;
Query OK, 0 rows affected (0.01 sec)

mysql> rollback to A;
Query OK, 0 rows affected (0.00 sec)

mysql> rollback to B;
ERROR 1305 (42000): SAVEPOINT B does not exist

========================================================================================================

## Difference between DATETIME AND TIMESTAMP

      A DATETIME stores a literal value of a date and time with no reference to any particular timezone. 
So, I can set a DATETIME column to a value such as '2019-01-16 12:15:00' to indicate precisely when my
 last birthday occurred. Was this Eastern Standard Time? Pacific Standard Time? Who knows? Where the 
 current session time zone of the server comes into play occurs when you set a DATETIME column to some 
 value such as NOW(). The value stored will be the current date and time using the current session time 
 zone in effect. But once a DATETIME column has been set, it will display the same regardless of what 
 the current session time zone is.

      A TIMESTAMP column on the other hand takes the '2019-01-16 12:15:00' value you are setting into it
and interprets it in the current session time zone to compute an internal representation relative
to 1/1/1970 00:00:00 UTC. When the column is displayed, it will be converted back for display 
based on whatever the current session time zone is. It's a useful fiction to think of a TIMESTAMP
as taking the value you are setting and converting it from the current session time zone to UTC 
for storing and then converting it back to the current session time zone for displaying.

      If my server is in San Francisco but I am running an event in New York that starts on 9/1/1029
 at 20:00, I would use a TIMESTAMP column for holding the start time, set the session time zone to 
 'America/New York' and set the start time to '2009-09-01 20:00:00'. If I want to know whether the 
 event has occurred or not, regardless of the current session time zone setting I can compare the start
  time with NOW(). Of course, for displaying in a meaningful way to a perspective customer, I would need
   to set the correct session time zone. If I did not need to do time comparisons, then I would probably 
   be better off just using a DATETIME column, which will display correctly (with an implied EST time zone)
    regardless of what the current session time zone is.

      The TIMESTAMP type has a range of '1970-01-01 00:00:01' UTC to '2038-01-19 03:14:07' UTC and so it 
may not usable for your particular application. In that case you will have to use a DATETIME type. 
You will, of course, always have to be concerned that the current session time zone is set properly
 whenever you are using this type with date functions such as NOW().

========================================================================================================

## Tips for Querying :

   * If qn. contains "atleast", then use EXIST constraint
   * If in qn. comparision is given, use "ALL","ANY","IN","NOT IN"

   * Having clause is used to apply condition to "Group by" Clause
      eg: select avg(age) from students group by age having avg(age) > 18;
        Here for each "unique" value of age in "Age" column, average is found for that unique val.
        and "having" is used to sort the avg(age) column retrieved in output.
   * Two types of Queries : Independent and Co-related Queries
   
